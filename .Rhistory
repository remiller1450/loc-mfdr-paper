## Estimate marginal false discoveries
mmat[i,] <- grpreg::mfdr(fit, X)$mFDR
## Get true FDR
rmat[i,] = get_truth(fit, ntrue = ntrue)$real_fdr
}
plot(ls, apply(mmat, 2, mean)*(1 - ntrue/ngrp), type = "l", lwd = 2, col = "blue",
ylab = "Groups",
xlab = expression(lambda), main = "Linear", bty = "n")
lines(ls, apply(rmat,2, mean), lwd = 2, col = "red")
mean(mmat[,58])
ls[58]
rmat[,58]
mean(rmat[,58])
mean(mmat[,88])
mean(mmat[,28])
mean(mmat[,38])
mean(mmat[,32])
mean(mmat[,33])
mean(mmat[,34])
ls[34]
mean(rmat[,34])
mean(rmat[,31])
mean(rmat[,32])
mean(rmat[,33])
mean(mmat[,33])
mean(mmat[,33])
mean(mmat[,30])
mean(mmat[,31])
mean(mmat[,32])
ls[32]
mean(rmat[,32])
## Source functions used in the simulations for the construction of figures
source("grp_fdr_sim_funs.R")
## Create and Export Fig 3
png("Fig3.png", h=3.3, w=7, units = 'in', res = 300)
make_plot3(reps = 500)
dev.off()
dev.off()
## Create and Export Fig 3
png("Fig3.png", h=3.3, w=7, units = 'in', res = 300)
make_plot3(reps = 500)
dev.off()
knitr::opts_chunk$set(echo = FALSE)
library(reshape2)
library(ggplot2)
library(knitr)
library(kableExtra)
library(dplyr)
sids <-data.frame(c("F",60,"M",78,"M",80,"M",77,"F",87,"M",115,"M",175,"F",56,"F",60,"M", 114,"M",81,"M",58,"M",103,"M",134,"M",46,"F",53), byrow = TRUE)
sids
?data.frame
sids <- matrix(c("F",60,"M",78,"M",80,"M",77,"F",87,"M",115,"M",175,"F",56,"F",60,"M", 114,"M",81,"M",58,"M",103,"M",134,"M",46,"F",53), byrow =  = TRUE)
sids <- matrix(c("F",60,"M",78,"M",80,"M",77,"F",87,"M",115,"M",175,"F",56,"F",60,"M", 114,"M",81,"M",58,"M",103,"M",134,"M",46,"F",53), byrow = TRUE)
sids
sids <- matrix(c("F",60,"M",78,"M",80,"M",77,"F",87,"M",115,"M",175,"F",56,"F",60,"M", 114,"M",81,"M",58,"M",103,"M",134,"M",46,"F",53), byrow = TRUE, ncol = 2)
sids
data.frame(Sex = sids[,1], Days = as.numeric(sids[,2]))
knitr::kable(sids, row.names = TRUE)
sids <- matrix(c("F",60,"M",78,"M",80,"M",77,"F",87,"M",115,"M",175,"F",56,"F",60,"M", 114,"M",81,"M",58,"M",103,"M",134,"M",46,"F",53), byrow = TRUE, ncol = 2)
sids <- data.frame(Sex = sids[,1], Days = as.numeric(sids[,2]))
knitr::kable(sids, row.names = TRUE)
knitr::kable(t(sids), row.names = TRUE)
kable(table(sids$Sex))
data.frame(Sex = c("F", "M"), Frequency = c(5, 11))
ggplot(data = sids, aes(x = Sex)) + geom_bar() + theme_minimal()
ggplot(data = sids, aes(x = Sex)) + geom_bar() + theme_minimal() + labs(x = "percentage")
ggplot(data = sids, aes(x = Sex)) + geom_bar() + theme_minimal() + labs(x = "percentage")
ggplot(data = sids, aes(x = Sex)) + geom_bar() + theme_minimal() + labs(xlab = "percentage")
ggplot(data = sids, aes(x = Sex)) + geom_bar() + theme_minimal() + labs(y = "percentage")
ggplot(data = sids, aes(x = Sex)) + geom_bar(stat = (..count..)/sum(..count..)) + theme_minimal() + labs(y = "Percentage")
ggplot(data = sids, aes(x = Sex)) + geom_bar() + theme_minimal() + labs(y = "Frequency")
ggplot(data = sids, aes(x = Sex)) + geom_bar() + theme_minimal() + labs(y = "Frequency", title = "SIDS cases (GHC of Puget Sound, 1972-1983)")
ggplot(data = sids, aes(x = Days)) + geom_bar() + theme_minimal() + labs(y = "Frequency", title = "SIDS cases (GHC of Puget Sound, 1972-1983)")
ggplot(data = sids, aes(x = Days)) + geom_dotplot() + theme_minimal() + labs(y = "Frequency", title = "SIDS cases (GHC of Puget Sound, 1972-1983)")
ggplot(data = sids, aes(x = Days)) + geom_dotplot(bins = 15) + theme_minimal() + labs(y = "Frequency", title = "SIDS cases (GHC of Puget Sound, 1972-1983)")
ggplot(data = sids, aes(x = Days)) + geom_dotplot(binwidth = 15) + theme_minimal() + labs(y = "Frequency", title = "SIDS cases (GHC of Puget Sound, 1972-1983)")
ggplot(data = sids, aes(x = Days)) + geom_dotplot(binwidth = 30) + theme_minimal() + labs(y = "Frequency", title = "SIDS cases (GHC of Puget Sound, 1972-1983)")
ggplot(data = sids, aes(x = Days)) + geom_dotplot(binwidth = 14) + theme_minimal() + labs(y = "Frequency", title = "SIDS cases (GHC of Puget Sound, 1972-1983)")
ggplot(data = sids, aes(x = Days)) + geom_dotplot(binwidth = 7) + theme_minimal() + labs(y = "Frequency", title = "SIDS cases (GHC of Puget Sound, 1972-1983)")
ggplot(data = sids, aes(x = Days)) + geom_dotplot(binwidth = 7, dotsize = 1) + theme_minimal() + labs(y = "Frequency", title = "Dotplot of SIDS cases (GHC of Puget Sound, 1972-1983)")
ggplot(data = sids, aes(x = Days)) + geom_dotplot(binwidth = 7, dotsize = 0.5) + theme_minimal() + labs(y = "Frequency", title = "Dotplot of SIDS cases (GHC of Puget Sound, 1972-1983)")
ggplot(data = sids, aes(x = Days)) + geom_dotplot(binwidth = 14, dotsize = 0.5) + theme_minimal() + labs(y = "Frequency", title = "Dotplot of SIDS cases (GHC of Puget Sound, 1972-1983)")
ggplot(data = sids, aes(x = Days)) + geom_dotplot(binwidth = 7, dotsize = 0.5) + theme_minimal() + labs(y = "Frequency", title = "Dotplot of SIDS cases (GHC of Puget Sound, 1972-1983)")
ggplot(data = sids, aes(x = Days)) + geom_dotplot(binwidth = 14, dotsize = 0.5) + theme_minimal() + labs(y = "Frequency", title = "Dotplot of SIDS cases (GHC of Puget Sound, 1972-1983)")
ggplot(data = sids, aes(x = Days)) + geom_dotplot(binwidth = 30, dotsize = 0.5) + theme_minimal() + labs(y = "Frequency", title = "Dotplot of SIDS cases (GHC of Puget Sound, 1972-1983)")
ggplot(data = sids, aes(x = Days)) + geom_dotplot(binwidth = 30, dotsize = 0.25) + theme_minimal() + labs(y = "Frequency", title = "Dotplot of SIDS cases (GHC of Puget Sound, 1972-1983)")
ggplot(data = sids, aes(x = Days)) + geom_dotplot(binwidth = 14, dotsize = 0.25) + theme_minimal() + labs(y = "Frequency", title = "Dotplot of SIDS cases (GHC of Puget Sound, 1972-1983)")
ggplot(data = sids, aes(x = Days)) + geom_dotplot(binwidth = 14, dotsize = 0.33) + theme_minimal() + labs(y = "Frequency", title = "Dotplot of SIDS cases (GHC of Puget Sound, 1972-1983)")
ggplot(data = sids, aes(x = Days)) + geom_histogram(binwidth = 14) + theme_minimal() + labs(y = "Frequency", title = "Dotplot of SIDS cases (GHC of Puget Sound, 1972-1983)")
ggplot(data = sids, aes(x = Days)) + geom_histogram(binwidth = 7) + theme_minimal() + labs(y = "Frequency", title = "Dotplot of SIDS cases (GHC of Puget Sound, 1972-1983)")
ggplot(data = sids, aes(x = Days)) + geom_histogram(binwidth = 15) + theme_minimal() + labs(y = "Frequency", title = "Dotplot of SIDS cases (GHC of Puget Sound, 1972-1983)")
ggplot(data = sids, aes(x = Days)) + geom_dotplot(binwidth = 15, dotsize = 0.33) + theme_minimal() + labs(y = "Frequency", title = "Dotplot of SIDS cases (GHC of Puget Sound, 1972-1983)")
ggplot(data = sids, aes(x = Days)) + geom_dotplot(binwidth = 6, dotsize = 0.33) + theme_minimal() + labs(y = "Frequency", title = "Dotplot of SIDS cases (GHC of Puget Sound, 1972-1983)")
ggplot(data = sids, aes(x = Days)) + geom_dotplot(binwidth = 7, dotsize = 0.33) + theme_minimal() + labs(y = "Frequency", title = "Dotplot of SIDS cases (GHC of Puget Sound, 1972-1983)")
ggplot(data = sids, aes(x = Days)) + geom_dotplot(binwidth = 7, dotsize = 0.7) + theme_minimal() + labs(y = "Frequency", title = "Dotplot of SIDS cases (GHC of Puget Sound, 1972-1983)")
ggplot(data = sids, aes(x = Days)) + geom_histogram(binwidth = 15) + theme_minimal() + labs(y = "Frequency", title = "Dotplot of SIDS cases (GHC of Puget Sound, 1972-1983)")
d1 <- rexp(100, rate = 2)
p1 <- ggplot(data = d1) + geom_histogram()
p1 <- ggplot(data = data.frame(v = d1)) + geom_histogram()
p1
p1 <- ggplot(data = data.frame(v = d1), aes(x = v)) + geom_histogram()
p1
p1 <- ggplot(data = data.frame(v = d1), aes(x = v)) + geom_histogram() + theme_minimal() + labs(y = "Frequency", title = "Skewed to the right")
p1
p1 <- ggplot(data = data.frame(v = d1), aes(x = v)) + geom_histogram(bins = 20) + theme_minimal() + labs(y = "Frequency", x = " " title = "Skewed to the right")
p1 <- ggplot(data = data.frame(v = d1), aes(x = v)) + geom_histogram(bins = 20) + theme_minimal() + labs(y = "Frequency", x = " ", title = "Skewed to the right")
p1
d2 <- 10 - rexp(100, rate = 1.4)
d2
d2 <- 10 - rexp(100, rate = 2.1)
p2 <- ggplot(data = data.frame(v = d1), aes(x = v)) + geom_histogram(bins = 20) + theme_minimal() + labs(y = "Frequency", x = " ", title = "Skewed to the left")
p2 <- ggplot(data = data.frame(v = d2), aes(x = v)) + geom_histogram(bins = 20) + theme_minimal() + labs(y = "Frequency", x = " ", title = "Skewed to the left")
p2
d2 <- rnorm(100)
p3 <- ggplot(data = data.frame(v = d3), aes(x = v)) + geom_histogram(bins = 20) + theme_minimal() + labs(y = "Frequency", x = " ", title = "Symmetric and bell-shaped")
d3 <- rnorm(100)
p3 <- ggplot(data = data.frame(v = d3), aes(x = v)) + geom_histogram(bins = 20) + theme_minimal() + labs(y = "Frequency", x = " ", title = "Symmetric and bell-shaped")
p3
p3 <- ggplot(data = data.frame(v = d3), aes(x = v)) + geom_histogram(bins = 15) + theme_minimal() + labs(y = "Frequency", x = " ", title = "Symmetric and bell-shaped")
p3
d3 <- runif(100,-3,3)
p3 <- ggplot(data = data.frame(v = d4), aes(x = v)) + geom_histogram(bins = 15) + theme_minimal() + labs(y = "Frequency", x = " ", title = "Symmetric but not bell-shaped")
gridExtra::grid.arrange(p1,p2,p3,p4, ncol = 2)
set.seed(1234)
d1 <- rexp(100, rate = 1.6)
p1 <- ggplot(data = data.frame(v = d1), aes(x = v)) + geom_histogram(bins = 20) + theme_minimal() + labs(y = "Frequency", x = " ", title = "Skewed to the right")
d2 <- 10 - rexp(100, rate = 2.1)
p2 <- ggplot(data = data.frame(v = d2), aes(x = v)) + geom_histogram(bins = 20) + theme_minimal() + labs(y = "Frequency", x = " ", title = "Skewed to the left")
d3 <- rnorm(100)
p3 <- ggplot(data = data.frame(v = d3), aes(x = v)) + geom_histogram(bins = 15) + theme_minimal() + labs(y = "Frequency", x = " ", title = "Symmetric and bell-shaped")
d4 <- runif(100,-3,3)
p4 <- ggplot(data = data.frame(v = d4), aes(x = v)) + geom_histogram(bins = 15) + theme_minimal() + labs(y = "Frequency", x = " ", title = "Symmetric but not bell-shaped")
gridExtra::grid.arrange(p1,p2,p3,p4, ncol = 2)
set.seed(12345)
d1 <- rexp(100, rate = 1.6)
p1 <- ggplot(data = data.frame(v = d1), aes(x = v)) + geom_histogram(bins = 20) + theme_minimal() + labs(y = "Frequency", x = " ", title = "Skewed to the right")
d2 <- 10 - rexp(100, rate = 2.1)
p2 <- ggplot(data = data.frame(v = d2), aes(x = v)) + geom_histogram(bins = 20) + theme_minimal() + labs(y = "", x = " ", title = "Skewed to the left")
d3 <- rnorm(100)
p3 <- ggplot(data = data.frame(v = d3), aes(x = v)) + geom_histogram(bins = 15) + theme_minimal() + labs(y = "Frequency", x = " ", title = "Symmetric and bell-shaped")
d4 <- runif(100,-3,3)
p4 <- ggplot(data = data.frame(v = d4), aes(x = v)) + geom_histogram(bins = 15) + theme_minimal() + labs(y = "", x = " ", title = "Symmetric but not bell-shaped")
gridExtra::grid.arrange(p1,p2,p3,p4, ncol = 2)
set.seed(12345)
d1 <- rexp(100, rate = 1.6)
p1 <- ggplot(data = data.frame(v = d1), aes(x = v)) + geom_histogram(bins = 20) + theme_minimal() + labs(y = "Frequency", x = " ", title = "Skewed to the right")
d2 <- 10 - rexp(100, rate = 2.1)
p2 <- ggplot(data = data.frame(v = d2), aes(x = v)) + geom_histogram(bins = 20) + theme_minimal() + labs(y = "", x = " ", title = "Skewed to the left")
d3 <- rnorm(100)
p3 <- ggplot(data = data.frame(v = d3), aes(x = v)) + geom_histogram(bins = 12) + theme_minimal() + labs(y = "Frequency", x = " ", title = "Symmetric and bell-shaped")
d4 <- runif(100,-3,3)
p4 <- ggplot(data = data.frame(v = d4), aes(x = v)) + geom_histogram(bins = 12) + theme_minimal() + labs(y = "", x = " ", title = "Symmetric but not bell-shaped")
gridExtra::grid.arrange(p1,p2,p3,p4, ncol = 2)
set.seed(123)
d1 <- rexp(100, rate = 1.6)
p1 <- ggplot(data = data.frame(v = d1), aes(x = v)) + geom_histogram(bins = 20) + theme_minimal() + labs(y = "Frequency", x = " ", title = "Skewed to the right")
d2 <- 10 - rexp(100, rate = 2.1)
p2 <- ggplot(data = data.frame(v = d2), aes(x = v)) + geom_histogram(bins = 20) + theme_minimal() + labs(y = "", x = " ", title = "Skewed to the left")
d3 <- rnorm(100)
p3 <- ggplot(data = data.frame(v = d3), aes(x = v)) + geom_histogram(bins = 12) + theme_minimal() + labs(y = "Frequency", x = " ", title = "Symmetric and bell-shaped")
d4 <- runif(100,-3,3)
p4 <- ggplot(data = data.frame(v = d4), aes(x = v)) + geom_histogram(bins = 12) + theme_minimal() + labs(y = "", x = " ", title = "Symmetric but not bell-shaped")
gridExtra::grid.arrange(p1,p2,p3,p4, ncol = 2)
set.seed(1231)
d1 <- rexp(100, rate = 1.6)
p1 <- ggplot(data = data.frame(v = d1), aes(x = v)) + geom_histogram(bins = 20) + theme_minimal() + labs(y = "Frequency", x = " ", title = "Skewed to the right")
d2 <- 10 - rexp(100, rate = 2.1)
p2 <- ggplot(data = data.frame(v = d2), aes(x = v)) + geom_histogram(bins = 20) + theme_minimal() + labs(y = "", x = " ", title = "Skewed to the left")
d3 <- rnorm(100)
p3 <- ggplot(data = data.frame(v = d3), aes(x = v)) + geom_histogram(bins = 12) + theme_minimal() + labs(y = "Frequency", x = " ", title = "Symmetric and bell-shaped")
d4 <- runif(100,-3,3)
p4 <- ggplot(data = data.frame(v = d4), aes(x = v)) + geom_histogram(bins = 12) + theme_minimal() + labs(y = "", x = " ", title = "Symmetric but not bell-shaped")
gridExtra::grid.arrange(p1,p2,p3,p4, ncol = 2)
set.seed(1231)
d1 <- rexp(100, rate = 1.6)
p1 <- ggplot(data = data.frame(v = d1), aes(x = v)) + geom_histogram(bins = 20) + theme_minimal() + labs(y = "Frequency", x = " ", title = "Skewed to the right")
d2 <- 10 - rexp(100, rate = 2.1)
p2 <- ggplot(data = data.frame(v = d2), aes(x = v)) + geom_histogram(bins = 20) + theme_minimal() + labs(y = "", x = " ", title = "Skewed to the left")
d3 <- rnorm(100)
p3 <- ggplot(data = data.frame(v = d3), aes(x = v)) + geom_histogram(bins = 14) + theme_minimal() + labs(y = "Frequency", x = " ", title = "Symmetric and bell-shaped")
d4 <- runif(100,-3,3)
p4 <- ggplot(data = data.frame(v = d4), aes(x = v)) + geom_histogram(bins = 14) + theme_minimal() + labs(y = "", x = " ", title = "Symmetric but not bell-shaped")
gridExtra::grid.arrange(p1,p2,p3,p4, ncol = 2)
p1 <- ggplot(data = data.frame(v = d1), aes(x = v)) + geom_histogram(bins = 20) + theme_minimal() + labs(y = "Frequency", x = " ", title = "Skewed to the right") + v_line(mean(d1))
p1 <- ggplot(data = data.frame(v = d1), aes(x = v)) + geom_histogram(bins = 20) + theme_minimal() + labs(y = "Frequency", x = " ", title = "Skewed to the right") + abline(mean(d1))
p1 <- ggplot(data = data.frame(v = d1), aes(x = v)) + geom_histogram(bins = 20) + theme_minimal() + labs(y = "Frequency", x = " ", title = "Skewed to the right") + abline(v = mean(d1))
p1 <- ggplot(data = data.frame(v = d1), aes(x = v)) + geom_histogram(bins = 20) + theme_minimal() + labs(y = "Frequency", x = " ", title = "Skewed to the right") + geom_abline(v = mean(d1))
p1 <- ggplot(data = data.frame(v = d1), aes(x = v)) + geom_histogram(bins = 20) + theme_minimal() + labs(y = "Frequency", x = " ", title = "Skewed to the right") + geom_vline( = mean(d1))
p1 <- ggplot(data = data.frame(v = d1), aes(x = v)) + geom_histogram(bins = 20) + theme_minimal() + labs(y = "Frequency", x = " ", title = "Skewed to the right") + geom_vline(mean(d1))
p1 <- ggplot(data = data.frame(v = d1), aes(x = v)) + geom_histogram(bins = 20) + theme_minimal() + labs(y = "Frequency", x = " ", title = "Skewed to the right") + geom_vline(mean(d1))
?geom_vline
p1 <- ggplot(data = data.frame(v = d1), aes(x = v)) + geom_histogram(bins = 20) + theme_minimal() + labs(y = "Frequency", x = " ", title = "Skewed to the right") + geom_vline(xintercept = mean(d1))
p1
p1 <- ggplot(data = data.frame(v = d1), aes(x = v)) + geom_histogram(bins = 20) + theme_minimal() + labs(y = "Frequency", x = " ", title = "Skewed to the right") + geom_vline(xintercept = mean(d1), col = "red")
p1
p1 <- ggplot(data = data.frame(v = d1), aes(x = v)) + geom_histogram(bins = 20) + theme_minimal() + labs(y = "Frequency", x = " ", title = "Skewed to the right") + geom_vline(xintercept = mean(d1), col = "red", lty = 2, lwd = 2) + geom_vline(xintercept = mean(d1), col = "blue", lty = 2, lwd = 2)
p1
p1 <- ggplot(data = data.frame(v = d1), aes(x = v)) + geom_histogram(bins = 20) + theme_minimal() + labs(y = "Frequency", x = " ", title = "Skewed to the right") + geom_vline(xintercept = mean(d1), col = "red", lty = 2, lwd = 2) + geom_vline(xintercept = median(d1), col = "blue", lty = 2, lwd = 2)
p1
set.seed(1231)
d1 <- rexp(100, rate = 1.6)
p1 <- ggplot(data = data.frame(v = d1), aes(x = v)) + geom_histogram(bins = 20) + theme_minimal() + labs(y = "Frequency", x = " ", title = "Skewed to the right") + geom_vline(xintercept = mean(d1), col = "red", lty = 2, lwd = 2) + geom_vline(xintercept = median(d1), col = "blue", lty = 2, lwd = 2)
d2 <- 10 - rexp(100, rate = 2.1)
p2 <- ggplot(data = data.frame(v = d2), aes(x = v)) + geom_histogram(bins = 20) + theme_minimal() + labs(y = "", x = " ", title = "Skewed to the left") + geom_vline(xintercept = mean(d2), col = "red", lty = 2, lwd = 2) + geom_vline(xintercept = median(d2), col = "blue", lty = 2, lwd = 2)
d3 <- rnorm(100)
p3 <- ggplot(data = data.frame(v = d3), aes(x = v)) + geom_histogram(bins = 14) + theme_minimal() + labs(y = "Frequency", x = " ", title = "Symmetric and bell-shaped") + geom_vline(xintercept = mean(d3), col = "red", lty = 2, lwd = 2) + geom_vline(xintercept = median(d3), col = "blue", lty = 2, lwd = 2)
d4 <- runif(100,-3,3)
p4 <- ggplot(data = data.frame(v = d4), aes(x = v)) + geom_histogram(bins = 14) + theme_minimal() + labs(y = "", x = " ", title = "Symmetric but not bell-shaped") + geom_vline(xintercept = mean(d4), col = "red", lty = 2, lwd = 2) + geom_vline(xintercept = median(d4), col = "blue", lty = 2, lwd = 2)
gridExtra::grid.arrange(p1,p2,p3,p4, ncol = 2)
[](Figs/box.png)
p4 <- ggplot(data = data.frame(v = d4), aes(x = v)) + geom_histogram(bins = 14) + theme_minimal() + labs(y = "", x = " ", title = "Symmetric but not bell-shaped") + geom_vline(xintercept = mean(d4), col = "red", lty = 2, lwd = 2) + geom_vline(xintercept = median(d4), col = "blue", lty = 2, lwd = 2)
load(projsim.RData)
load("C:\\Users\\millerr33\\Documents\\GitHub\\loc-mfdr-paper\\projsim.RData")
ggplot(data = dff, aes(x = rho, y = sel, linetype = method, col = type)) +
scale_color_manual(name = "Feature Type", values = cids[c(2,3,1)], labels = c("Causal", "Correlated", "Noise")) +
geom_line() + geom_point() + facet_grid(~correlation) +
labs(y = "Selections", linetype = "Method", x = expression(rho))
meth_id <- 1
rho_id <- 1
cor_id <- 1
dfp1 <- data.frame(sel = c(mean(rowSums(res[[meth_id]][,id.A,rho_id,cor_id] < 0.1)),
mean(rowSums(res[[meth_id]][,id.B,rho_id,cor_id] < 0.1)),
mean(rowSums(res[[meth_id]][,id.C,rho_id,cor_id] < 0.1))),
type = rep(c("A", "B", "C"), 1),
rho  = rep(rhos[rho_id], 3),
correlation = rep(cors[cor_id],3),
method = rep("projection", 3))
rho_id <- 2
cor_id <- 1
dfp2 <- data.frame(sel = c(mean(rowSums(res[[meth_id]][,id.A,rho_id,cor_id] < 0.1)),
mean(rowSums(res[[meth_id]][,id.B,rho_id,cor_id] < 0.1)),
mean(rowSums(res[[meth_id]][,id.C,rho_id,cor_id] < 0.1))),
type = rep(c("A", "B", "C"), 1),
rho  = rep(rhos[rho_id], 3),
correlation = rep(cors[cor_id],3),
method = rep("projection", 3))
rho_id <- 3
cor_id <- 1
dfp3 <- data.frame(sel = c(mean(rowSums(res[[meth_id]][,id.A,rho_id,cor_id] < 0.1)),
mean(rowSums(res[[meth_id]][,id.B,rho_id,cor_id] < 0.1)),
mean(rowSums(res[[meth_id]][,id.C,rho_id,cor_id] < 0.1))),
type = rep(c("A", "B", "C"), 1),
rho  = rep(rhos[rho_id], 3),
correlation = rep(cors[cor_id],3),
method = rep("projection", 3))
rho_id <- 1
cor_id <- 2
dfp4 <- data.frame(sel = c(mean(rowSums(res[[meth_id]][,id.A,rho_id,cor_id] < 0.1)),
mean(rowSums(res[[meth_id]][,id.B,rho_id,cor_id] < 0.1)),
mean(rowSums(res[[meth_id]][,id.C,rho_id,cor_id] < 0.1))),
type = rep(c("A", "B", "C"), 1),
rho  = rep(rhos[rho_id], 3),
correlation = rep(cors[cor_id],3),
method = rep("projection", 3))
rho_id <- 2
cor_id <- 2
dfp5 <- data.frame(sel = c(mean(rowSums(res[[meth_id]][,id.A,rho_id,cor_id] < 0.1)),
mean(rowSums(res[[meth_id]][,id.B,rho_id,cor_id] < 0.1)),
mean(rowSums(res[[meth_id]][,id.C,rho_id,cor_id] < 0.1))),
type = rep(c("A", "B", "C"), 1),
rho  = rep(rhos[rho_id], 3),
correlation = rep(cors[cor_id],3),
method = rep("projection", 3))
rho_id <- 3
cor_id <- 2
dfp6 <- data.frame(sel = c(mean(rowSums(res[[meth_id]][,id.A,rho_id,cor_id] < 0.1)),
mean(rowSums(res[[meth_id]][,id.B,rho_id,cor_id] < 0.1)),
mean(rowSums(res[[meth_id]][,id.C,rho_id,cor_id] < 0.1))),
type = rep(c("A", "B", "C"), 1),
rho  = rep(rhos[rho_id], 3),
correlation = rep(cors[cor_id],3),
method = rep("projection", 3))
dfpf <- rbind(dfp1, dfp2, dfp3, dfp4, dfp5, dfp6)
#load("projsim.RData")
meth_id <- 2
rho_id <- 1
cor_id <- 1
dfm1 <- data.frame(sel = c(mean(rowSums(res[[meth_id]][,id.A,rho_id,cor_id] < 0.1)),
mean(rowSums(res[[meth_id]][,id.B,rho_id,cor_id] < 0.1)),
mean(rowSums(res[[meth_id]][,id.C,rho_id,cor_id] < 0.1))),
type = rep(c("A", "B", "C"), 1),
rho  = rep(rhos[rho_id], 3),
correlation = rep(cors[cor_id],3),
method = rep("mfdr", 3))
rho_id <- 2
cor_id <- 1
dfm2 <- data.frame(sel = c(mean(rowSums(res[[meth_id]][,id.A,rho_id,cor_id] < 0.1)),
mean(rowSums(res[[meth_id]][,id.B,rho_id,cor_id] < 0.1)),
mean(rowSums(res[[meth_id]][,id.C,rho_id,cor_id] < 0.1))),
type = rep(c("A", "B", "C"), 1),
rho  = rep(rhos[rho_id], 3),
correlation = rep(cors[cor_id],3),
method = rep("mfdr", 3))
rho_id <- 3
cor_id <- 1
dfm3 <- data.frame(sel = c(mean(rowSums(res[[meth_id]][,id.A,rho_id,cor_id] < 0.1)),
mean(rowSums(res[[meth_id]][,id.B,rho_id,cor_id] < 0.1)),
mean(rowSums(res[[meth_id]][,id.C,rho_id,cor_id] < 0.1))),
type = rep(c("A", "B", "C"), 1),
rho  = rep(rhos[rho_id], 3),
correlation = rep(cors[cor_id],3),
method = rep("mfdr", 3))
rho_id <- 1
cor_id <- 2
dfm4 <- data.frame(sel = c(mean(rowSums(res[[meth_id]][,id.A,rho_id,cor_id] < 0.1)),
mean(rowSums(res[[meth_id]][,id.B,rho_id,cor_id] < 0.1)),
mean(rowSums(res[[meth_id]][,id.C,rho_id,cor_id] < 0.1))),
type = rep(c("A", "B", "C"), 1),
rho  = rep(rhos[rho_id], 3),
correlation = rep(cors[cor_id],3),
method = rep("mfdr", 3))
rho_id <- 2
cor_id <- 2
dfm5 <- data.frame(sel = c(mean(rowSums(res[[meth_id]][,id.A,rho_id,cor_id] < 0.1)),
mean(rowSums(res[[meth_id]][,id.B,rho_id,cor_id] < 0.1)),
mean(rowSums(res[[meth_id]][,id.C,rho_id,cor_id] < 0.1))),
type = rep(c("A", "B", "C"), 1),
rho  = rep(rhos[rho_id], 3),
correlation = rep(cors[cor_id],3),
method = rep("mfdr", 3))
rho_id <- 3
cor_id <- 2
dfm6 <- data.frame(sel = c(mean(rowSums(res[[meth_id]][,id.A,rho_id,cor_id] < 0.1)),
mean(rowSums(res[[meth_id]][,id.B,rho_id,cor_id] < 0.1)),
mean(rowSums(res[[meth_id]][,id.C,rho_id,cor_id] < 0.1))),
type = rep(c("A", "B", "C"), 1),
rho  = rep(rhos[rho_id], 3),
correlation = rep(cors[cor_id],3),
method = rep("mfdr", 3))
dfmf <- rbind(dfm1, dfm2, dfm3, dfm4, dfm5, dfm6)
dff <- rbind(dfpf, dfmf)
cids <- pal(3)
dff$correlation[which(dff$correlation == "auto")] <- "Autoregressive"
dff$correlation[which(dff$correlation == "exch")] <- "Exchangeable"
## Textual info
## 1.6% rate of noise selections (projection)
sum(res[[1]][,id.C,,] < 0.1)/
sum(res[[1]][,,,] < 0.1)
## 4.3% rate of noise selections (mfdr)
sum(res[[2]][,id.C,,] < 0.1)/
sum(res[[2]][,,,] < 0.1)
### Setup "Violated" scenario parameters
n <- 200
t <- 60
bb <- numeric(t)
bb[(0:5)*10+1] <- c(6,-6,5,-5,4,-4)  #### 6 true variables (type A)
## Ids of var types
id.A <- which(bb != 0)
id.B <- 1:t
id.B <- id.B[-id.A]
## Store mfdr's and proj_fdr's for each across 100 iterations
nreps <- 100
rhos <- c(0.8,0.4,0)
cors <-  c("auto", "exch")
p <- 600
id.C <- (t+1):p
#load("projsim.RData")
meth_id <- 1
rho_id <- 1
cor_id <- 1
dfp1 <- data.frame(sel = c(mean(rowSums(res[[meth_id]][,id.A,rho_id,cor_id] < 0.1)),
mean(rowSums(res[[meth_id]][,id.B,rho_id,cor_id] < 0.1)),
mean(rowSums(res[[meth_id]][,id.C,rho_id,cor_id] < 0.1))),
type = rep(c("A", "B", "C"), 1),
rho  = rep(rhos[rho_id], 3),
correlation = rep(cors[cor_id],3),
method = rep("projection", 3))
rho_id <- 2
cor_id <- 1
dfp2 <- data.frame(sel = c(mean(rowSums(res[[meth_id]][,id.A,rho_id,cor_id] < 0.1)),
mean(rowSums(res[[meth_id]][,id.B,rho_id,cor_id] < 0.1)),
mean(rowSums(res[[meth_id]][,id.C,rho_id,cor_id] < 0.1))),
type = rep(c("A", "B", "C"), 1),
rho  = rep(rhos[rho_id], 3),
correlation = rep(cors[cor_id],3),
method = rep("projection", 3))
rho_id <- 3
cor_id <- 1
dfp3 <- data.frame(sel = c(mean(rowSums(res[[meth_id]][,id.A,rho_id,cor_id] < 0.1)),
mean(rowSums(res[[meth_id]][,id.B,rho_id,cor_id] < 0.1)),
mean(rowSums(res[[meth_id]][,id.C,rho_id,cor_id] < 0.1))),
type = rep(c("A", "B", "C"), 1),
rho  = rep(rhos[rho_id], 3),
correlation = rep(cors[cor_id],3),
method = rep("projection", 3))
rho_id <- 1
cor_id <- 2
dfp4 <- data.frame(sel = c(mean(rowSums(res[[meth_id]][,id.A,rho_id,cor_id] < 0.1)),
mean(rowSums(res[[meth_id]][,id.B,rho_id,cor_id] < 0.1)),
mean(rowSums(res[[meth_id]][,id.C,rho_id,cor_id] < 0.1))),
type = rep(c("A", "B", "C"), 1),
rho  = rep(rhos[rho_id], 3),
correlation = rep(cors[cor_id],3),
method = rep("projection", 3))
rho_id <- 2
cor_id <- 2
dfp5 <- data.frame(sel = c(mean(rowSums(res[[meth_id]][,id.A,rho_id,cor_id] < 0.1)),
mean(rowSums(res[[meth_id]][,id.B,rho_id,cor_id] < 0.1)),
mean(rowSums(res[[meth_id]][,id.C,rho_id,cor_id] < 0.1))),
type = rep(c("A", "B", "C"), 1),
rho  = rep(rhos[rho_id], 3),
correlation = rep(cors[cor_id],3),
method = rep("projection", 3))
rho_id <- 3
cor_id <- 2
dfp6 <- data.frame(sel = c(mean(rowSums(res[[meth_id]][,id.A,rho_id,cor_id] < 0.1)),
mean(rowSums(res[[meth_id]][,id.B,rho_id,cor_id] < 0.1)),
mean(rowSums(res[[meth_id]][,id.C,rho_id,cor_id] < 0.1))),
type = rep(c("A", "B", "C"), 1),
rho  = rep(rhos[rho_id], 3),
correlation = rep(cors[cor_id],3),
method = rep("projection", 3))
dfpf <- rbind(dfp1, dfp2, dfp3, dfp4, dfp5, dfp6)
#load("projsim.RData")
meth_id <- 2
rho_id <- 1
cor_id <- 1
dfm1 <- data.frame(sel = c(mean(rowSums(res[[meth_id]][,id.A,rho_id,cor_id] < 0.1)),
mean(rowSums(res[[meth_id]][,id.B,rho_id,cor_id] < 0.1)),
mean(rowSums(res[[meth_id]][,id.C,rho_id,cor_id] < 0.1))),
type = rep(c("A", "B", "C"), 1),
rho  = rep(rhos[rho_id], 3),
correlation = rep(cors[cor_id],3),
method = rep("mfdr", 3))
rho_id <- 2
cor_id <- 1
dfm2 <- data.frame(sel = c(mean(rowSums(res[[meth_id]][,id.A,rho_id,cor_id] < 0.1)),
mean(rowSums(res[[meth_id]][,id.B,rho_id,cor_id] < 0.1)),
mean(rowSums(res[[meth_id]][,id.C,rho_id,cor_id] < 0.1))),
type = rep(c("A", "B", "C"), 1),
rho  = rep(rhos[rho_id], 3),
correlation = rep(cors[cor_id],3),
method = rep("mfdr", 3))
rho_id <- 3
cor_id <- 1
dfm3 <- data.frame(sel = c(mean(rowSums(res[[meth_id]][,id.A,rho_id,cor_id] < 0.1)),
mean(rowSums(res[[meth_id]][,id.B,rho_id,cor_id] < 0.1)),
mean(rowSums(res[[meth_id]][,id.C,rho_id,cor_id] < 0.1))),
type = rep(c("A", "B", "C"), 1),
rho  = rep(rhos[rho_id], 3),
correlation = rep(cors[cor_id],3),
method = rep("mfdr", 3))
rho_id <- 1
cor_id <- 2
dfm4 <- data.frame(sel = c(mean(rowSums(res[[meth_id]][,id.A,rho_id,cor_id] < 0.1)),
mean(rowSums(res[[meth_id]][,id.B,rho_id,cor_id] < 0.1)),
mean(rowSums(res[[meth_id]][,id.C,rho_id,cor_id] < 0.1))),
type = rep(c("A", "B", "C"), 1),
rho  = rep(rhos[rho_id], 3),
correlation = rep(cors[cor_id],3),
method = rep("mfdr", 3))
rho_id <- 2
cor_id <- 2
dfm5 <- data.frame(sel = c(mean(rowSums(res[[meth_id]][,id.A,rho_id,cor_id] < 0.1)),
mean(rowSums(res[[meth_id]][,id.B,rho_id,cor_id] < 0.1)),
mean(rowSums(res[[meth_id]][,id.C,rho_id,cor_id] < 0.1))),
type = rep(c("A", "B", "C"), 1),
rho  = rep(rhos[rho_id], 3),
correlation = rep(cors[cor_id],3),
method = rep("mfdr", 3))
rho_id <- 3
cor_id <- 2
dfm6 <- data.frame(sel = c(mean(rowSums(res[[meth_id]][,id.A,rho_id,cor_id] < 0.1)),
mean(rowSums(res[[meth_id]][,id.B,rho_id,cor_id] < 0.1)),
mean(rowSums(res[[meth_id]][,id.C,rho_id,cor_id] < 0.1))),
type = rep(c("A", "B", "C"), 1),
rho  = rep(rhos[rho_id], 3),
correlation = rep(cors[cor_id],3),
method = rep("mfdr", 3))
dfmf <- rbind(dfm1, dfm2, dfm3, dfm4, dfm5, dfm6)
dff <- rbind(dfpf, dfmf)
cids <- pal(3)
dff$correlation[which(dff$correlation == "auto")] <- "Autoregressive"
dff$correlation[which(dff$correlation == "exch")] <- "Exchangeable"
## Textual info
## 1.6% rate of noise selections (projection)
sum(res[[1]][,id.C,,] < 0.1)/
sum(res[[1]][,,,] < 0.1)
## 4.3% rate of noise selections (mfdr)
sum(res[[2]][,id.C,,] < 0.1)/
sum(res[[2]][,,,] < 0.1)
ggplot(data = dff, aes(x = rho, y = sel, linetype = method, col = type)) +
scale_color_manual(name = "Feature Type", values = cids[c(2,3,1)], labels = c("Causal", "Correlated", "Noise")) +
geom_line() + geom_point() + facet_grid(~correlation) +
labs(y = "Selections", linetype = "Method", x = expression(rho))
cids <- pal(3)
## Sets the working directory to current location of this folder
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
## Sources functions used in the simulations and the construction of figures
source("functions.R")
cids <- pal(3)
dff$correlation[which(dff$correlation == "auto")] <- "Autoregressive"
dff$correlation[which(dff$correlation == "exch")] <- "Exchangeable"
ggplot(data = dff, aes(x = rho, y = sel, linetype = method, col = type)) +
scale_color_manual(name = "Feature Type", values = cids[c(2,3,1)], labels = c("Causal", "Correlated", "Noise")) +
geom_line() + geom_point() + facet_grid(~correlation) +
labs(y = "Selections", linetype = "Method", x = expression(rho))
ggplot(data = dff, aes(x = rho, y = sel, col = type)) +
scale_color_manual(name = "Feature Type", values = cids[c(2,3,1)], labels = c("Causal", "Correlated", "Noise")) +
geom_line() + geom_point() + facet_grid(~method) +
labs(y = "Selections", linetype = "Method", x = expression(rho))
ggplot(data = subset(dff, correlation == "Autoregressive"), aes(x = rho, y = sel, col = type)) +
scale_color_manual(name = "Feature Type", values = cids[c(2,3,1)], labels = c("Causal", "Correlated", "Noise")) +
geom_line() + geom_point() + facet_grid(~method) +
labs(y = "Selections", linetype = "Method", x = expression(rho))
ps <- ggplot(data = subset(dff, correlation == "Autoregressive"), aes(x = rho, y = sel, col = type)) +
scale_color_manual(name = "Feature Type", values = cids[c(2,3,1)], labels = c("Causal", "Correlated", "Noise")) +
geom_line() + geom_point() + facet_grid(~method) +
labs(y = "Selections", linetype = "Method", x = expression(rho))
png("figures_tables/Fig_proj.png", h=3.5, w=7, units = 'in', res = 300)
ps
dev.off()
